
Any - All Object
Any함수 유형을 포함하여 모든 유형의 인스턴스를 나타낼 수 있습니다.

AnyObject - Objects derived from classes
AnyObject모든 클래스 유형의 인스턴스를 나타낼 수 있습니다.

NSObject - Foundation object
하위 클래스가 런타임 시스템에 대한 기본 인터페이스와 Objective-C 개체로 작동하는 기능을 상속하는 대부분의 Objective-C 클래스 계층 구조의 루트 클래스입니다.


📝 메모
유형 Any은 선택적 유형을 포함하여 모든 유형의 값을 나타냅니다. 유형의 값이 Any예상되는 곳에 선택적 값을 사용하는 경우 Swift는 경고를 표시합니다. 옵셔널 값을 값으로 사용해야 하는 경우 아래와 같이 연산자를 사용하여 옵셔널을 명시적으로 캐스트 Any할 수 있습니다 .asAny

let optionalNumber: Int? = 3
things.append(optionalNumber)        // Warning
things.append(optionalNumber as Any) // No warning



📝 메모 - 다운캐스팅
특정 클래스 유형의 상수 또는 변수는 실제로 배후에서 하위 클래스의 인스턴스를 참조할 수 있습니다. 이 경우라고 생각되는 경우 유형 캐스트 ​​연산자 ( 또는 ) 를 사용하여 하위 클래스 유형으로 다운캐스트를 시도할 수 있습니다 .as?as!
다운캐스팅은 실패할 수 있으므로 유형 캐스트 ​​연산자는 두 가지 형식으로 제공됩니다. 조건부 형식은 as?다운캐스트하려는 유형의 선택적 값을 반환합니다. 강제 형식 은 as!다운캐스트를 시도하고 결과를 단일 복합 동작으로 강제 언래핑합니다.
as?다운캐스트가 성공할지 확신할 수 없는 경우 유형 캐스트 ​​연산자( )의 조건부 형식을 사용하십시오 . 이 형식의 연산자는 항상 선택적 값을 반환하며 값은 nil다운캐스트가 가능하지 않은 경우입니다. 이를 통해 성공적인 다운캐스트를 확인할 수 있습니다.
유형 캐스트 ​​연산자( as!)의 강제 형식은 다운 캐스트가 항상 성공할 것이라고 확신하는 경우에만 사용하십시오. 이 형식의 연산자는 잘못된 클래스 유형으로 다운캐스트하려고 하면 런타임 오류를 트리거합니다.
아래 예제는 의 각 항목을 반복 하고 각 항목에 대한 적절한 설명을 인쇄합니다. 이렇게 하려면 가 아닌 true 또는 로 각 항목에 액세스해야 합니다 . 이는 설명에서 사용하기 위해 또는 a 의 속성에 액세스할 수 있도록 하기 위해 필요합니다 .MediaItemlibraryMovieSongMediaItemdirectorartistMovieSong
이 예에서 배열의 각 항목은 이거나 Movie.일 수 있습니다 Song. 각 항목에 사용할 실제 클래스를 미리 알지 못하므로 as?루프를 통해 매번 다운캐스트를 확인하기 위해 유형 캐스트 ​​연산자( )의 조건부 형식을 사용하는 것이 적절합니다.



📝 메모
캐스팅은 실제로 인스턴스를 수정하거나 해당 값을 변경하지 않습니다. 기본 인스턴스는 동일하게 유지됩니다. 단순히 캐스팅된 형식의 인스턴스로 처리되고 액세스됩니다.