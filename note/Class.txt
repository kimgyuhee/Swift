23.06.04

iOS & Swift - The Complete iOS App Development Bootcamp
- [Swift Deep Dive] Classes and Inheritance

Classes 
- 청사진을 정의하는 방법
앱을 실행할때 클래스를 개체로 초기화 시킬 수 있어요 init()

- 이번 시간 -
클래스로부터 객체를 생성하는 방법에 대한 이야기

상속, 서브 클래스, 슈퍼 클래스

1. SubClass
2. SuperClass
3. Override
4. Super.method()

Code 밑에 콘솔창을 디버그 콘솔이라고 부른다.

* Define the Class

Class MyClass {} 
-> 클래스 키워드 + 클래스의 이름(대문자로 시작) + {클래스의 구현을 정의}


* Initialise the Class 
MyClass()


* Inheritance
Class MyClass : SuperClass { }

- 슈퍼클래스는 무슨뜻인가 ?
슈퍼 클래스에서 상속받았다는것은?
슈퍼클래스를 부모라고 생각해보자 -> 메서드를 갖고 있는
좀 더 클래스를 강화시키고 싶다면 기존 클래스에 코드를 더 추가해서 할 수 있어요
하지만 다른 방법도 있어요 SubClass를 생성하고 기능을 추가할 수 있어요.

* Apple의 가장 기본적인 클래스는 NSObject이다. -> 가장 간단하고 일반적인 구성요소
NS는 넥스트탭의 약자이다. 스티브잡스가 애플에서 쫓겨났을 때 설립한 회사
UIResponder도 NS 객체가 할 수 있는 모든 것을 할 수 있지만 추가적인 기능이 있어요
UIView는 UIResponder의 기능 위에 빌드됩니다.
UIControl은 그 위에 빌드되고요, 각 층마다 더 많은 코드와 기능이 추가되어 구성 요소들이 덜 일반적이고 더 전문화되었다
마지막으로 사용자가 누를수 있는 UIButton이 나오죠.
이제 나무 위까지 쫓아왔는데 처음부터 모든 걸 만들어야 한다면 얼마나 더 오래 걸릴지 알 수 없다.

<SupClass>
UIButton
UIControl
UIView
UIResponder
NSObject
<SuperClass>


