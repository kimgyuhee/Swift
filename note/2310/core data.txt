[Core data] Entity Class 설정 - Codeine option 탐구

우리가 Core data를 처음 마주하여 Entity를 생성하면, 이 Entity(Class)에 대해 Name과 Module과 Codegen을 설정해야한다.
** Codegen이란?
리액트 네이티브팀은 더욱 많은 정적타입 checker를 넣으려 함 ( flow, typescript를 통해 )
Codegen이란 툴을 통해, 자바스크립트와 네이티브 코드간 호환을 자동화함
1. Mnual/None -> 모든 작업을 직접 수행해야함
2. Class Definition(Default) -> data, entity, property를 class와 property로 만들어 조작 가능
3. Category/Extension -> 나만의 커스텀 설정 -> entity와 이름이 동일한 클래스를 생성하면 xcode가 자동으로 링크한다.


--------------------------------------------------------------------------

Name :
Module :
Codegen :
Constraints :


1. Entity Class 설정

먼저 Entity는 Core Data가 관리하는 객체를 의미한다.
우리가 일반 코드를 다룰 때 이용하는 Class
DB를 다룰 때 이용하는 Table과 개념이 비슷하다.

Name을 통해, 우리가 직관적으로 이해할 수 있는 Class Name을 설정
-> Entity Name에는 영향을 주지 않는다.


2. Module은 무엇일까 ? 먼저 간단하게 알아보자

밑에 Module은 무엇일까 ? Module 항목에서는 우리가 새로 만든 Entity를 Class로 선언할 때, 이 Class가 어떤 Module에 존재할 지 정해준다.
맨 처음에는 Global namespace로 되어 있을 텐데, 보통은 Current Product Module로 수정해준다.
간단한 작업을 할 경우에는 이렇게 그대로 두어도 상관없지만 , 우리의 프로젝트가 복잡해지고 특히 어플리케이션이 Multi-threading을 사용하게 되면, Module을 지정해주지 않으면 오류가 생길 수 있다고 한다.


3. 내가 궁금했건 부분! Codegen이라느 무엇일까 ?

Codegen은 Entity에 대한 Class 선언을 자동으로 만들어주는 옵션을 설정하게 해준다.

(1). Class Definition

Codegen 항목을 처음 보게 되면, Class Definition으로 설정되어 있다. 이 설정은 우리의 Data, Enities, Attributes들을
자동으로 Class화 시켜주고 Property화 시켜주는 역할을 한다. 이를 통해 우리는 이 설정을 통해 관련된 파일을 추가하지 않고도 Entity를 이용하거나 조작할 수 있다.

/User/gyuhee/Library/Developer/Xcode/DerivedData/CoreDataTest-[Project Name]/Build/Intermediates.noindex/CoreDataTest.build/Debug-iphonesimulator/CoreDataTest.build/DerivedSourve/CoreDataGenerated/DataModel
=> 해당 디렉토리 접근 주소

Class 파일은 생성되면 Xcode에 의해서 수정되지 않는다.
반면에 Properties 파일은 Xcode의 필요에 따라 끊임없지 재생성된다.

이 말은 즉슨 우리가 필요에 따라 이 코드에 무언가를 수정하거나 추가를 해도, 어느 순간 Xcode에 의해 초기화 되어버릴 수 있다는 말
만약에 우리의 코드를 통해 저 파일들을 제거하기 바란다면 우리는 세번째 옵션인 Category/Extension을 선택해야 한다.


(2) Category/Extension

우리가 이 옵션을 선택하게 되면, 우리는 우리 스스로 우리의 Entity들의 이름으로 Class들을 직접 생성해야 한다.
그러면 Xcode가 자동으로 연결을 해주게 된다.


(3) Manual/None

이 옵션은 아무런 코드를 생성하지 않겠다는 뜻이다.
"어떠한 자동적인 연결도 필요없고 모든 것을 개발자 나 혼자서 다 해서 내가 알아서 사용하겠다"라는 뜻이다.


4. 코드 살펴보기

import Foundation
import CoreData

Public class MyData : NSManagedObject {

}

MyData 클래스는 NSManagedObject를 상속받는다. NSManagedObject는 CoreData를 통해 이 클래스를 관리할 수 있도록 해준다.

