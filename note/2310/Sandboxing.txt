샌드박스(sandbox)란 외부로부터 들어온 프로그램이 보호된 영역에서 동작해 시스템이 부정하게 조작되는 것을 막는 보안 형태이다.

App Sandbox
문서에 따르면 앱 샌드박스는 커널 레벨에서 앱의 데이터에 대한 접근을 제한하는 기술이에요. 앱 샌드박스의 목적은 앱이 손상되었을 때 사용자 데이터나 시스템에 위험이 되지 않도록 방지하는 역할을 수행합니다. 

우리가 잘 알고있듯이 복잡할 수록 소프트웨어가 가지는 위험요소들이 늘어납니다. 우리가 프로그래밍을 처음배울 때 만든 첫 프로그램인 Hello World 출력 프로그램과 지금 만들고 있는 프로그램을 비교해보면, 복잡도에 따라 위험요소가 얼마나 많은지 체감할 수 있죠ㅎㅎ
개발자들이 아무리 보안에 신경을 많이 쓰더라도 앱을 공격하는 진영에서는 그냥 딱 한 번만 뚫어내면 됩니다. 그전까지 아무리 많은 보호를 했어도 한 번 뚫리는 순간부터는 의미가 없어지죠.
앱 샌드박스는 앱에 들어오는 공격을 사전에 차단하는 기술은 아니에요. 대신 공격이 성공했을 때 발생하는 피해를 최소화할 수 있도록 도와주는 기술입니다.

문서에서는 샌드박스가 적용되지 않은 앱에 어떤 일이 일어날 수 있는지 셜명하고 있습니다. 샌드박스가 적용되지 않은 앱은 앱을 실행하는 사용자가 앱에 대한 모든 권한을 가지게 됩니다. 따라서 보안이 한 번 뚫리게 되면 이제 그 앱은 앱을 공격한 개발자가 원하는대로 무엇이든지 할 수 있는 앱이 되는거죠.

이런 문제를 해결하기 위해서, 앱 샌드박스는 두 가지 전략을 사용하고 있습니다.

다음과 같은 리소스를 사용하려면, 앱 샌드박스가 적용된 앱은 반드시 명시적으로 어떤 리소스에 어떤 목적으로 접근하려고 하는지 알리게 됩니다. 리소스 목록이 문서에 나와있는데, iOS에 맞춰서 정리해볼게요:
- 하드웨어(카메라, 마이크, 프린터)
- 네트워크 연결(요청, 응답)
- 앱 데이터(캘린더, 연락처, 위치)
- 유저 데이터(Downloads, User Selected Files) 

이렇게 위 리소스에 대해 명시적으로 요청되지 않은 접근은 런타임에 모두 차단됩니다.