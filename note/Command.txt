Command Line

- Mac에서 커멘드 라인을 사용하기 위해서 '터미널' 애플리케이션을 사용할 거예요
- 터미널은 Bash shell 접속
- MacOS는 유닉스 운영 체제에서 실행
- why use the command line ?
- 전통적으로 네트워크 관리자는 네트워크 관리를 위해 명령줄 인터페이스(CLI)를 사용
* 셸(shell, 문화어: 쉘, 자령해석프로그램)은 운영 체제 상에서 다양한 운영 체제 기능과 서비스를 구현하는 인터페이스를 제공하는 프로그램이다.


Shell : 1) GUI 2) CLI
### Advantages of CLI ###
1) Faster configuration, 더 빠른 구성
2) Individual device management, 개별 장치 관리
3) Troubleshooting information, 문제 해결 정보


### Advantages of GUIs ###
1) Web-based, centralized configuration, 웹 기반 중앙 집중식 구성
2) User-friendliness, 사용자 친근성
3) Visual format, 시각적 형식


Kernel : 운영체제 핵심요소

-----------------------
	Application.  |
-----------------------
	 # Kernel     |
-----------------------
CPU | Memory | Devices|
-----------------------

컴퓨터 	-> 하드웨어(HW)
	-> 소프트웨어(SW)	-> 응용프로그램
			-> 운영체제(OS)	-> 시스템 프로그램
					-> 커널

* 커널의 역할
- 보안 : computer HW와 Process의 보안을 책임진다.
- 자원관리 : 한정된 시스템 자원을 효율적으로 관리하여 프로그램의 실행을 원활하게 한다.
		특히 프로세스 처리기를 할당하는 것을 스케줄링이라 한다.
- 추상화 : 추상화란 물리적으로 하나뿐인 하드웨어를 여러 사용자들이 번갈아 사용할 수 있도록 마치 여러개처럼 보이게 하는 기술이다.
같은 종류의 부품에 대해 다양한 하드웨어를 설계할 수 있기 때문에 하드웨어에 직접 접근하는 것은 문제를 매우 복잡하게 만들 수 있다. 일반적으로 커널은 운영 체제의 복잡한 내부를 감추고 깔끔하고 일관성 있는 인터페이스를 하드웨어에 제공하기 위해 몇 가지 하드웨어 추상화(같은 종류의 장비에 대한 공통 명령어의 집합)들을 구현한다. 이 하드웨어 추상화는 프로그래머가 여러 장비에서 작동하는 프로그램을 개발하는 것을 돕는다. 하드웨어 추상화 계층(HAL)은 제조사의 장비 규격에 대한 특정한 명령어를 제공하는 소프트웨어 드라이버에 의지한다.

1. 모놀리식 커널에는 Unix, Embedded Linux, OSEK, WinMobile 등이 있다.
2. 마이크로 커널에는 MacOS, Winodws NT 등이 있다.



사용 가능한 쉘 목록 보기 : cat /etc/shells

원하는 쉘로 바꾸기 : chsh -s /bin/bash (원하는 쉘)
- 또는 터미널을 띄운 상태로 상단 메뉴바에 터미널 > 환경설정 > 일반에서 셸 열기 에서 가능한 쉘로 바꾸어 주어도 된다.


파일과 디렉터리 나열하기 : ls
# 가장 많이 사용: 모든 정보를 출력하고자 할 때
$ ls -al
$ ls -al dic/

# ~: HOME의 shortcut, HOME에 어떤 것들이 있는지 확인할 때
$ ls ~

# *: Wild card
$ ls dic/*.txt	#.txt만 찾고 싶을 때
$ ls dic/*[0-9]*	# 0~9 사이의 숫자가 든 파일을 찾고 싶을 때

$ 역순으로 정렬하고, 그룹 권한을 출력하지 않으며, time & date로 정렬할 때
$ ls –rot
 


cd: change directory
working directory를 바꿀 때 사용 가능
# HOME으로 이동할 때
$ cd
$ cd ~

$ cd [DIR]

# Parent directory로 이동할 때
$ cd ..


rm: remove
파일 제거 기능. 파일은 즉시 사라지며, 복구가 어렵기 때문에 굉장히 주의해야한다.
# Remove folder (-r: recursively //–f: Don’t ask me the permission)
$ rm -rf [DIR]

# kill whole Linux system. 유저에게 allowed된 파일은 모두 제거한다.
$ rm –rf /



cat: concatenate
파일 출력 (prints file to stdout)
$ cat [FILE]

# -e: control characters and ASCII (ex. newlines control characters 확인 가능)
$ cat -e [FILE]

# -n: line number 추가 가능
$ cat -n [FILE]



head/tail: show first/last n lines in a file or stream
파일의 시작/끝 부분만 출력
$ head [FILE]
$ tail [FILE]

# -n: 출력 행 개수 지정 가능
$ head -n 10 [FILE]
$ tail -n 10 [FILE]

$ tail -n +6 # 마지막에서 6번째 줄까지 출력



wget: web get
웹에서 파일 다운로드
$ wget '[LINK]'

# -O: 파일 이름 지정 가능
$ wget -O file.gtf.gz '[LINK]'



wc: word count
파일이나 stream의 lines, words, bytes의 수를 셀 수 있다 (File feeling을 얻을 수 있음).



gunzip: uncompress gzip files
gz 형식의 파일을 압축 해제할 수 있다.



chmod: change permission of file
# 파일을 실행 가능한 상태로 만들기.
$ chmod +x file.sh
$ bash file.sh



그 외 유명한 shell commands
pwd : show present working directory ($ pwd)
mkdir : make a directory ($ mkdir [DIR])
mv : move, 파일 이름을 바꿀 때도 사용 가능하다 ($ mv [FROM] [TO])
cp : copy files ($ cp [FROM] [TO])
top : show running processes, 실행 프로그램 확인 ($ top)
touch : creates an empty file ($ touch [FILE])
man : manual of any command, command의 help page를 보여준다 ($ man [command])
which : 프로그램 경로 (path) 확인 ($ which [프로그램명])
vi : open interactive text editor($ vi [FILE])
diff : compare two files
ps : list running processes, 현재 동작하는 process 확인 가능 ($ ps -ef)
kill : kill running process, 특정 process 중단 가능 ($ kill -9 [PID])
sed : a powerful tool to process text files
cut


